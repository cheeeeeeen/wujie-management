<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.wujie.mapper.NFinanceMapper">
    
    <resultMap type="NFinance" id="NFinanceResult">
        <result property="id"    column="id"    />
        <result property="contractId"    column="contract_id"    />
        <result property="type"    column="type"    />
        <result property="paypeople"    column="paypeople"    />
        <result property="count"    column="count"    />
        <result property="state"    column="state"    />
        <result property="del"    column="del"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="invoiceType"    column="invoice_type" />
        <association property="nContract" javaType="nContract" resultMap="com.ruoyi.wujie.mapper.NContractMapper.NContractResult">

        </association>
        <association property="nCase" javaType="nCase" resultMap="com.ruoyi.wujie.mapper.NCaseMapper.NCaseResult">

        </association>
        <association property="nCustomer" javaType="nCustomer" resultMap="com.ruoyi.wujie.mapper.NCustomerMapper.NCustomerResult">

        </association>
    </resultMap>

    <sql id="selectNFinanceVo">
        select nfi.*, nca.* from n_finance nfi left join n_contract nco on nco.id = nfi.contract_id left join n_case nca on nca.case_id = nfi.case_id
    </sql>

    <select id="selectNFinanceList" parameterType="NFinance" resultMap="NFinanceResult">
        <include refid="selectNFinanceVo"/>
        <where>  
            <if test="contractId != null "> and nfi.contract_id = #{contractId}</if>
            <if test="caseId != null"> and nca.case_id = #{caseId}</if>
            <if test="type != null  and type != ''"> and nfi.type = #{type}</if>
            <if test="paypeople != null  and paypeople != ''"> and nfi.paypeople = #{paypeople}</if>
            <if test="count != null "> and nfi.count = #{count}</if>
            <if test="state != null  and state != ''"> and nfi.state = #{state}</if>
            <if test="del != null  and del != ''"> and nfi.del = #{del}</if>
        </where>
        order by nfi.id desc
    </select>
    
    <select id="selectNFinanceById" parameterType="Long" resultMap="NFinanceResult">
        <include refid="selectNFinanceVo"/>
        where nfi.id = #{id}
    </select>
        
    <insert id="insertNFinance" parameterType="NFinance" useGeneratedKeys="true" keyProperty="id">
        insert into n_finance
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="contractId != null">contract_id,</if>
            <if test="type != null">type,</if>
            <if test="paypeople != null">paypeople,</if>
            <if test="count != null">count,</if>
            <if test="state != null">state,</if>
            <if test="del != null">del,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="caseId != null">case_id,</if>
            <if test="remark != null">remark,</if>
            <if test="invoiceType != null">invoice_type,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="contractId != null">#{contractId},</if>
            <if test="type != null">#{type},</if>
            <if test="paypeople != null">#{paypeople},</if>
            <if test="count != null">#{count},</if>
            <if test="state != null">#{state},</if>
            <if test="del != null">#{del},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="caseId != null">#{caseId},</if>
            <if test="remark != null">#{remark},</if>
            <if test="invoiceType != null">#{invoiceType},</if>
         </trim>
    </insert>

    <update id="updateNFinance" parameterType="NFinance">
        update n_finance
        <trim prefix="SET" suffixOverrides=",">
            <if test="contractId != null">contract_id = #{contractId},</if>
            <if test="type != null">type = #{type},</if>
            <if test="paypeople != null">paypeople = #{paypeople},</if>
            <if test="count != null">count = #{count},</if>
            <if test="state != null">state = #{state},</if>
            <if test="del != null">del = #{del},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="caseId != null">case_id = #{caseId},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="invoiceType != null">invoice_type = #{invoiceType},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteNFinanceById" parameterType="Long">
        delete from n_finance where id = #{id}
    </delete>

    <delete id="deleteNFinanceByIds" parameterType="String">
        delete from n_finance where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>