<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.wujie.mapper.NContractMapper">
    
    <resultMap type="NContract" id="NContractResult">
        <result property="id"    column="id"    />
        <result property="customerId"    column="customer_id"    />
        <result property="state"    column="state"    />
        <result property="del"    column="del"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <association property="nCustomer" javaType="nCustomer" resultMap="com.ruoyi.wujie.mapper.NCustomerMapper.NCustomerResult">

        </association>
    </resultMap>

    <sql id="selectNContractVo">
        select nco.*,ncs.* from n_contract nco left join n_customer ncs on nco.customer_id = ncs.id
    </sql>

    <select id="selectNContractList" parameterType="NContract" resultMap="NContractResult">
        <include refid="selectNContractVo"/>
        <where>  
            <if test="customerId != null "> and nco.customer_id = #{customerId}</if>
            <if test="nCustomer != null and nCustomer.name != null and nCustomer.name != '' ">
                and ncs.name = #{nCustomer.name}
            </if>
            <if test="state != null  and state != ''"> and nco.state = #{state}</if>
            <if test="del != null  and del != ''"> and nco.del = #{del}</if>
        </where>
        order by nco.id desc
    </select>
    
    <select id="selectNContractById" parameterType="Long" resultMap="NContractResult">
        <include refid="selectNContractVo"/>
        where nco.id = #{id}
    </select>
        
    <insert id="insertNContract" parameterType="NContract" useGeneratedKeys="true" keyProperty="id">
        insert into n_contract
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="customerId != null">customer_id,</if>
            <if test="state != null">state,</if>
            <if test="del != null">del,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="customerId != null">#{customerId},</if>
            <if test="state != null">#{state},</if>
            <if test="del != null">#{del},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateNContract" parameterType="NContract">
        update n_contract
        <trim prefix="SET" suffixOverrides=",">
            <if test="customerId != null">customer_id = #{customerId},</if>
            <if test="state != null">state = #{state},</if>
            <if test="del != null">del = #{del},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteNContractById" parameterType="Long">
        delete from n_contract where id = #{id}
    </delete>

    <delete id="deleteNContractByIds" parameterType="String">
        delete from n_contract where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>